/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-03-01 12:38:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\" />\r\n");
      out.write("	<title>Musical Instrument System</title>\r\n");
      out.write("	<link href=\"assets/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("	<link href=\"assets/css/font-awesome.css\" rel=\"stylesheet\" />\r\n");
      out.write("	<link href=\"assets/css/style.css\" rel=\"stylesheet\" />\r\n");
      out.write("	<link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' />\r\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<div class=\"navbar navbar-inverse set-radius-zero\">\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("				<div class=\"navbar-header\">\r\n");
      out.write("					<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\r\n");
      out.write("						<span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span>\r\n");
      out.write("					</button>\r\n");
      out.write("					<h1>Musical Instrument System</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	<nav>\r\n");
      out.write("		<section class=\"menu-section\">\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-md-12\">\r\n");
      out.write("						<div class=\"navbar-collapse collapse\">\r\n");
      out.write("							<ul id=\"menu-top\" class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("								<li><a href=\"index.jsp\">Admin Login</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<main>\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-md-6\">\r\n");
      out.write("					<img src=\"assets/img/musical-instruments.jpg\" style=\"width: 550px;\"></img>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-md-6\">\r\n");
      out.write("					<div class=\"panel panel-info\">\r\n");
      out.write("						<div class=\"panel-heading\">Admin Login</div>\r\n");
      out.write("						<div class=\"panel-body\">\r\n");
      out.write("							<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.fail}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("								<div class=\"alert alert-danger\" id=\"danger\">You have entered wrong credentials.</div>\r\n");
      out.write("							</c:if>\r\n");
      out.write("							<form role=\"form\" action=\"AdminLogin\" method=\"post\">\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<label>User Name</label> <input class=\"form-control\" type=\"text\" name=\"uname\" />\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<label>Password</label> <input class=\"form-control\" type=\"password\" name=\"upass\" />\r\n");
      out.write("								</div>\r\n");
      out.write("								<button type=\"submit\" class=\"btn btn-success\">Login</button>\r\n");
      out.write("								<button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n");
      out.write("							</form>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	<footer>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</footer>\r\n");
      out.write("	<script src=\"assets/js/jquery-1.10.2.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/bootstrap.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/custom.js\"></script>\r\n");
      out.write("	<script>(function(i, s, o, g, r, a, m) {\r\n");
      out.write("			i['GoogleAnalyticsObject'] = r;\r\n");
      out.write("			i[r] = i[r] || function() {\r\n");
      out.write("				(i[r].q = i[r].q || []).push(arguments)\r\n");
      out.write("			}, i[r].l = 1 * new Date();\r\n");
      out.write("			a = s.createElement(o), m = s.getElementsByTagName(o)[0];\r\n");
      out.write("			a.async = 1;\r\n");
      out.write("			a.src = g;\r\n");
      out.write("			m.parentNode.insertBefore(a, m)\r\n");
      out.write("		})\r\n");
      out.write("				(		window,\r\n");
      out.write("						document,\r\n");
      out.write("						'script',\r\n");
      out.write("						'../../../../../../www.google-analytics.com/analytics.js',\r\n");
      out.write("						'ga');\r\n");
      out.write("		ga('create', 'UA-58127580-1', 'auto');\r\n");
      out.write("		ga('send', 'pageview');\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.10.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$('#danger').delay(1500).show().fadeOut('slow');\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
